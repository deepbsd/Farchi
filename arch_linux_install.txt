#############   TASKS IN ORDER

1. set keyboard map (if non-us)
2. verify boot mode (EFI or not)
3. check network connection (config wifi if needed)
4. update mirrors (already done with reflector script)
5. set locale, timezone and ntp/clock for installer
6. prepare drives: partition, make fs, swap, format, mount 
7. genfstab and then check /mnt/etc/fstab from step 6
8. pacstrap essential packages
10. arch-chroot /mnt timezone
11. arch-chroot /mnt set locale
13. arch-chroot /mnt set network and hostname configs
14. arch-chroot /mnt build initramfs
15. arch-chroot /mnt root password
17. arch-chroot /mnt add sudo, add sudo user, git, gnupg, ssh, yay, paru etc
18. arch-chroot /mnt install xorg and desktops and basic software
19. arch-chroot /mnt install desktop added software
20. arch-chroot /mnt install grub
21. reboot system

########  AFTER INSTALL ###########
1. copy dotfiles and vim subdirs
2. scp -r Music, public_html, sounds, .gkrellm2, wallpaper, wallpaper1,
bin, .ssh, .gnupg
3. make tmp repos adm build 
4. install yay, gnome-terminal-transparency, chrome-stable, libdvd
libcss libdvdread gkrellm mlocate
5. install nodejs gvim powerline powerline-fonts nvm

##########################
##    Ideas for Future
##########################

Decide whether to keep this curses based or turn it into a graphical app
like the Zen Installer

Investigate whether to use other disk partitioning methods besides cfdisk

Try to give the user a choice between available drives

Try creating partitions programatically instead of with cfdisk

The script needs to be more resiliant to bad input from user.  Figure out
how to do that better.

Find a way to implement the sshpass program with arch-chroot.  Possible?


